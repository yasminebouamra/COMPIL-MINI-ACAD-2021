%{
int nblignes=1;
%}
SNombre [0-9]
INTEGER ([0-9]|\-[0-9])*
FLOAT ({INTEGER}.{SNombre}+)
IDF [A-Z]([A-Za-z]*{SNombre}*)*
IDFTAB {IDF}{TailleTab}
commentaire \/\*.*\*\/
CHAR [A-Za-z0-9]
STRING \"{CHAR}*\"
OpCond [SUP|SUPE|EG|DIFF|INF|INFE]
TailleTab \[{SNombre}*\]
FIO [$|%|#|&]
TIO \(\".*\"(\|{IDF})*\)
%%
"##" {printf("mc_import\t");}
"PROCESS" {printf("lib_process\t");}
"LOOP" {printf("lib_loop\t");}
"ARRAY" {printf("lib_array\t");}
"PROGRAMME" {printf("mc_start\t");}
"VAR" {printf("mc_decvar\t");}
"EXECUT" {printf("mc_execut\t");}
"IF" {printf("mc_if\t");}
"ELSE" {printf("mc_else\t");}
"END_IF" {printf("mc_endif\t");}
"While" {printf("mc_while\t");}
"READ" {printf("fonc_entree\t");}
"WRITE" {printf("fonc_sortie\t");}
"(" {printf("mc_po\t");}
")" {printf("mc_pf\t");}
"{" {printf("mc_ao\t");}
"}" {printf("mc_af\t");}
"@" {printf("mc_adresse\t");}
"SUP" {printf("mc_sup\t");}
"SUPE" {printf("mc_supe\t");}
"INF" {printf("mc_inf\t");}
"INFE" {printf("mc_infe\t");}
"DIFF" {printf("mc_diff\t");}
"EG" {printf("mc_eg\t");}
":=" {printf("mc_aff\t");}
"|" {printf("mc_sep\t");}
"+" {printf("mc_add\t");}
"*" {printf("mc_mul\t");}
"-" {printf("mc_diff\t");}
"/" {printf("mc_div\t");}
"$" {printf("endinst\t");}
{INTEGER} {printf("INTEGER\t");}
"INTEGER" {printf("mc_int\t");}
{FLOAT} {printf("FLOAT\t");}
"FLOAT" {printf("mc_float\t");}
{CHAR} {printf("CHAR\t");}
"CHAR" {printf("mc_char\t");}
{STRING} {printf("string\t");}
"STRING" {printf("mc_string\t");}
"CONST" {printf("mc_const\t");}
{IDF} {printf("IDF\t");}
{IDFTAB} {printf("IDFTAB\t");}
{commentaire} {printf("commentaire\t");}
{TIO} {printf("mc_io");}
\n {nblignes++;}
[ \t] 
. {printf("erreur dans la ligne %d a l'entite %s",nblignes,yytext);}
